---
title: "Weight Trends and Litter Box Usage Patterns for the Morache Clowder"
subtitle: "From November 5th, 2024"
format: html
---

**Author:** 

Mathias MH Morache | Software Developer & Cat Enthusiast

<br>

```{r, echo = FALSE, include = FALSE, library-imports}

#  /\_/\  
# ( o.o ) 
#  > ^ <

# Import libraries
library(ggplot2)
library(dplyr)
library(lubridate)
library(kableExtra)
library(tidyr)
library(reticulate)
library(moments)

```

## Overview

This report analyzes weight trends and litter box usage patterns for each of my four cats. The data was collected from a [Litter-Robot 4](https://www.litter-robot.com/) automatic litter box starting November 5th, 2024. 

:::{#fig-cats layout-ncol="4"}
:::{#fig-biralo}
![](img/biralo.png)

Gilbert (Biralo)
:::
:::{#fig-nunu}
![](img/nunu.png)

Speck (Nunu)
:::
:::{#fig-catness}
![](img/catness.png)

Catness
:::
:::{#fig-frankie}
![](img/frankie.png)

Frankie
:::
:::

### Methodology and Data Cleaning

The following considerations should be noted:

* **Scale Precision:** The precision and consistency of the Litter-Robot's scale is unknown. However, I did not observe any glaringly inaccurate readings collected under normal circumstances.
* **Cat Identification:**  Recordings are attributed to specific cats based on weight ranges, assuming each cat maintains a distinct weight profile. Gilbert and Frankie are the closest to overlapping in ranges, but this did not appear to happen. Although the Litter-Robot uses an "advanced cluster algorithm" to identify cats, this information is not exported.
* **Outlier Removal:**  Extreme weight outliers, due to erroneously recorded events such as litter refilling and maintenance, have been removed from the dataset.
* **Data Consolidation:** Consecutive weight recordings within 15-minute intervals have been averaged to reduce noise and simplify analysis.


### Cat Profiles

All of my cats share these characteristics:

* **Indoor:** They live exclusively indoors.
* **Diet:** Their diet consists primarily of wet food (Friskies 5.5 oz cans), typically consuming 4-6 cans per day, supplemented with dry treats (Temptations, Friskies), and bonito flakes (鰹節, *katsuobushi*, AKA skipjack tuna).
* **Sterilization:** All cats are spayed or neutered.
* **Birthdate:** With the exception of Gilbert, all birthdates are approximate, based on the best guess of the intial veterinarian who treated the cat after adoption.

<br>

```{r, echo = FALSE, cat-profiles}

# Prepare table with basic information
cat_profiles <- data.frame(
  Cat = c("Gilbert", "Speck", "Catness", "Frankie"),
  Birthdate = c("2013-07-27", "2017-04-15", "2020-07-15", "2021-11-15"),
  Sex = c("Male", "Female", "Male", "Male"),
  "Health_Issues" = c("Hyperthyroid, vomiting (chronic)", "tooth decay, diarrhea (chronic)", "None", "None")
)

# Convert birthdate to date
cat_profiles$Birthdate <- ymd(cat_profiles$Birthdate)

# Calculate age
today <- today()
cat_profiles$Age <- year(today) - year(cat_profiles$Birthdate)

# Add medication column
cat_profiles$Medication <- ifelse(cat_profiles$Cat == "Gilbert", "Methimazole, 3.75 mg", "None")

cat_profiles <- cat_profiles %>%
  select(Cat, Age, Sex, Health_Issues, Medication) %>%
  arrange(Cat)

# Display table with profiles
kable(cat_profiles, caption = "Cat Profiles", align = "l") %>% 
  kable_styling(full_width = F) %>%
    column_spec(1:5, width = "20%")

```

```{python, echo = FALSE, include = FALSE, python-data-cleaning}

# make sure to activate the virtual environment before running
# source .venv/bin/activate

from cleaner import CatDataCleaner

cleaner = CatDataCleaner()
cleaner.process_data()
```

```{r, echo = FALSE, data-prep}

### Prep the data for R ###

# Load data after initial cleaning in Python.
cat_data <- read.csv("cat_weights.csv")

# Convert timestamp to datetime
cat_data$Timestamp <- ymd_hms(cat_data$Timestamp)

# Set date range
start_date <- min(cat_data$Timestamp) %>% as_date()
end_date <- max(cat_data$Timestamp) %>% as_date()
num_weeks <- interval(start_date, end_date) %/% weeks(1) 

# Add weekly data
cat_data$Week <- floor(as.numeric(difftime(cat_data$Timestamp, start_date, units = "days")) / 7) + 1
cat_data$Weekday <- wday(cat_data$Timestamp)

cat_summary_weight <- cat_data %>%
  group_by(Cat) %>%
  summarize(
    Min = min(Weight),
    Max = max(Weight),
    Avg = round(mean(Weight), 1),
    Med = median(Weight),
    SD = round(sd(Weight), 2),
    Skew = round(skewness(Weight), 2),
    Kurt = round(kurtosis(Weight), 2)
  )

cat_summary_visits <- cat_data %>%
  group_by(Cat) %>%
  summarize(
    Total_Visits = n(),
    Weekly_Visits = round(Total_Visits / num_weeks, 1)
  )

# Generate new df with weekly data that is easier to graph
weekly_stats <- cat_data %>%
  filter(Timestamp >= start_date, Timestamp <= end_date) %>%
  group_by(Cat, Week) %>%
  summarize(
    Avg_Weekly_Weight = round(mean(Weight), 1),
    Total_Weekly_Visits = n(),
    Mean_Daily_Visits = round(Total_Weekly_Visits / 7, 2),
    .groups = "drop"
  )

# Get cat names
cat_list <- unique(weekly_stats$Cat)

```

<br>

## Summary Statistics

Key statistics for each cat's weight and litter box usage are summarized in the following tables and plots.

```{r, echo = FALSE, summary-table-weight}

# Basic stats
kable(cat_summary_weight, caption = "Weight Summary Statistics per Cat")

```

<br>

```{r, echo = FALSE, summary-table-visits}

# Basic stats
kable(cat_summary_visits, caption = "Litter Box Visit Frequency per Cat")

```

<br>

```{r, echo = FALSE, line-plot}

# Line plot with facet wrap
ggplot(cat_data, aes(x = Timestamp, y = Weight, color = Cat)) +
  geom_smooth(se = FALSE, method = "loess", span = 0.3, formula = 'y ~ x') +
  labs(title = "Weight Over Time for Each Cat", x = "Timestamp", y = "Weight") +
  #facet_wrap(~Cat, scales = "free_y") +
  facet_wrap(~Cat, scales = "fixed") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(legend.position = "bottom")

```

```{r, echo = FALSE, density-plot}

# Density plot with facet wrap
ggplot(cat_data, aes(x = Weight, fill = Cat)) +
  geom_density(alpha = 0.7) +
  labs(title = "Distribution of Cat Weights", x = "Weight", y = "Density") +
  #facet_wrap(~ Cat, ncol = 2, scales = "free_y") +
  facet_wrap(~ Cat, ncol = 2, scales = "fixed") +
  theme_bw() +
  theme(legend.position = "bottom")

```

<br>

## Comparative Weekly Trends

The following plots visualize weekly changes in weight and litter box usage for each cat comparatively.

```{r, echo = FALSE, comparative-weekly-weight-plot}

# Plot average weekly weight
ggplot(weekly_stats, aes(x = Week, y = Avg_Weekly_Weight, color = Cat)) +
  geom_line() +
  geom_point() +
  labs(title = "Average Weekly Weight", x = "Week", y = "Weight (lbs)") +
  theme(legend.position = "bottom")

```

```{r, echo = FALSE, include = TRUE, comparative-usage-plot-3}
last_week <- max(cat_data$Week) # Find the last (most likely incomplete) week.

weekly_stats_complete <- weekly_stats %>%
  filter(Week < last_week)  # Exclude the current week

ggplot(weekly_stats_complete, aes(x = Week, y = Mean_Daily_Visits, color = Cat)) +
  geom_line() +
  geom_point() +
  labs(title = "Mean Daily Litter Box Usage by Weekly Mean", x = "Week", y = "Visits") +
  theme(legend.position = "bottom")

```

```{r, echo = FALSE, comparative-usage-plot-4}
# Calculate daily visits
daily_stats <- cat_data %>%
  group_by(Cat, Date = as_date(Timestamp)) %>%  # Group by cat and date
  summarize(Daily_Visits = n(), .groups = "drop")   # Count visits per day

# Plot daily visits
ggplot(daily_stats, aes(x = Date, y = Daily_Visits, color = Cat)) +
  geom_smooth(method = "loess", formula = y ~ x, se = FALSE) + 
  labs(title = "Litter Box Usage by Daily Mean", x = "Date", y = "Visits") +
  theme(legend.position = "bottom")
```


<br>

## Weight Statistics

The following plots provide a more detailed look into weight trends for each individual cat. The standard error of the regression line is shaded in gray, representing a 95% confidence interval.

```{r, echo = FALSE, individual-weight-plots}

# Run a for loop to get plots for all the cats
for (cat_name in unique(cat_data$Cat)) {
  cat_subset <- cat_data %>% filter(Cat == cat_name)

  # Set regression line color based on cat name
  line_color <- if (cat_name == "Gilbert") {
    "blue"
  } else if (cat_name == "Speck") {
    "purple"
  } else if (cat_name == "Catness") {
    "red"
  } else if (cat_name == "Frankie") {
    "green"  
  } else {
    "black"
  }

  plot <- ggplot(cat_subset, aes(x = Timestamp, y = Weight)) +
    geom_point() +
    geom_smooth(method = "lm", formula = y ~ x, se = TRUE, color = line_color, show.legend = FALSE) +
    labs(title = paste("Weight Trend for", cat_name), x = "Date", y = "Weight (lbs)") +
    theme_bw()

  print(plot)
}

```

```{r, echo = FALSE, individual-weight-plots-2}

# Calculate global min and max weight
min_weight <- min(cat_data$Weight)
max_weight <- max(cat_data$Weight)

# Create a single plot with all cats
ggplot(cat_data, aes(x = Timestamp, y = Weight, color = Cat)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = TRUE, aes(group = Cat)) +  # Group by cat for separate lines
  labs(title = "Weight Trends for All Cats", x = "Date", y = "Weight (lbs)") +
  theme_bw() +
  scale_y_continuous(limits = c(min_weight, max_weight)) +
  scale_color_manual(values = c("Gilbert" = "blue", "Speck" = "purple", "Catness" = "red", "Frankie" = "green")) +
  theme(legend.position = "bottom")

#  /\_/\  
# ( ^_^ ) 
# (   "   )  
#  \~(*)~/   
#   ~~~~

```